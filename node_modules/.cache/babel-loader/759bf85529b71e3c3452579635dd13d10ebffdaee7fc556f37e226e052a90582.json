{"ast":null,"code":"var ip;\n// window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for Firefox and chrome\n// if (!RTCPeerConnection) {\n\n//   let win = iframe.contentWindow;\n//   RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\n// }\n// var pc = new RTCPeerConnection({iceServers:[]}), noop = function(){};      \n// pc.createDataChannel(''); //create a bogus data channel\n// pc.createOffer(pc.setLocalDescription.bind(pc), noop); // create offer and set local description\n// pc.onicecandidate = function(ice){\n//     if (ice && ice.candidate && ice.candidate.candidate){\n//       try{\n//         ip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n//         console.log('my IP: ', ip);   \n//         pc.onicecandidate = noop;\n\n//       }\n//       catch(err){\n//         try{\n//           console.log(\"用webrtc获取ip失败\",err)\n//           if(!ip) ip=/([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(window.location.href)[1]\n\n//         }\n//         catch(err1) {\n//           ip='localhost'\n//         }\n//       }\n//      }\n// };\nip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(window.location.href)[1];\nexport default ip;\n// try{\n// }catch(err){\n//   ip='localhost'\n// }","map":{"version":3,"names":["ip","exec","window","location","href"],"sources":["C:/Users/joedesktop/Documents/programming/frontend/vue/test1/test1/src/assets/js/ipfetch.js"],"sourcesContent":["var ip\r\n// window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for Firefox and chrome\r\n// if (!RTCPeerConnection) {\r\n\r\n//   let win = iframe.contentWindow;\r\n//   RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\r\n// }\r\n// var pc = new RTCPeerConnection({iceServers:[]}), noop = function(){};      \r\n// pc.createDataChannel(''); //create a bogus data channel\r\n// pc.createOffer(pc.setLocalDescription.bind(pc), noop); // create offer and set local description\r\n// pc.onicecandidate = function(ice){\r\n//     if (ice && ice.candidate && ice.candidate.candidate){\r\n//       try{\r\n//         ip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\r\n//         console.log('my IP: ', ip);   \r\n//         pc.onicecandidate = noop;\r\n\r\n//       }\r\n//       catch(err){\r\n//         try{\r\n//           console.log(\"用webrtc获取ip失败\",err)\r\n//           if(!ip) ip=/([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(window.location.href)[1]\r\n\r\n//         }\r\n//         catch(err1) {\r\n//           ip='localhost'\r\n//         }\r\n//       }\r\n//      }\r\n// };\r\nip=/([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(window.location.href)[1]\r\nexport default ip\r\n// try{\r\n// }catch(err){\r\n//   ip='localhost'\r\n// }\r\n"],"mappings":"AAAA,IAAIA,EAAE;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,GAAC,gEAAgE,CAACC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjG,eAAeJ,EAAE;AACjB;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}