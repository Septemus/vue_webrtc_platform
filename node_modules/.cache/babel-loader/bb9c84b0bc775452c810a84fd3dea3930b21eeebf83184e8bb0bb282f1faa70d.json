{"ast":null,"code":"var ip;\nwindow.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for Firefox and chrome\nif (!RTCPeerConnection) {\n  let win = iframe.contentWindow;\n  RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\n}\nvar pc = new RTCPeerConnection({\n    iceServers: []\n  }),\n  noop = function () {};\npc.createDataChannel(''); //create a bogus data channel\npc.createOffer(pc.setLocalDescription.bind(pc), noop); // create offer and set local description\npc.onicecandidate = function (ice) {\n  if (ice && ice.candidate && ice.candidate.candidate) {\n    try {\n      ip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n      console.log('my IP: ', ip);\n      pc.onicecandidate = noop;\n    } catch (err) {\n      try {\n        console.log(\"用webrtc获取ip失败\", err);\n        if (!ip) ip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(window.location.href)[1];\n      } catch (err1) {\n        ip = 'localhost';\n      }\n    }\n  }\n};\nexport default ip;\n// try{\n// }catch(err){\n//   ip='localhost'\n// }","map":{"version":3,"names":["ip","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","win","iframe","contentWindow","pc","iceServers","noop","createDataChannel","createOffer","setLocalDescription","bind","onicecandidate","ice","candidate","exec","console","log","err","location","href","err1"],"sources":["C:/Users/joedesktop/Documents/programming/frontend/vue/test1/test1/src/assets/js/ipfetch.js"],"sourcesContent":["var ip\r\nwindow.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for Firefox and chrome\r\nif (!RTCPeerConnection) {\r\n\r\n  let win = iframe.contentWindow;\r\n  RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\r\n}\r\nvar pc = new RTCPeerConnection({iceServers:[]}), noop = function(){};      \r\npc.createDataChannel(''); //create a bogus data channel\r\npc.createOffer(pc.setLocalDescription.bind(pc), noop); // create offer and set local description\r\npc.onicecandidate = function(ice){\r\n    if (ice && ice.candidate && ice.candidate.candidate){\r\n      try{\r\n        ip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\r\n        console.log('my IP: ', ip);   \r\n        pc.onicecandidate = noop;\r\n\r\n      }\r\n      catch(err){\r\n        try{\r\n          console.log(\"用webrtc获取ip失败\",err)\r\n          if(!ip) ip=/([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(window.location.href)[1]\r\n\r\n        }\r\n        catch(err1) {\r\n          ip='localhost'\r\n        }\r\n      }\r\n     }\r\n};\r\nexport default ip\r\n// try{\r\n// }catch(err){\r\n//   ip='localhost'\r\n// }\r\n"],"mappings":"AAAA,IAAIA,EAAE;AACNC,MAAM,CAACC,iBAAiB,GAAGD,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,oBAAoB,IAAIF,MAAM,CAACG,uBAAuB,CAAC,CAAC;AACtH,IAAI,CAACF,iBAAiB,EAAE;EAEtB,IAAIG,GAAG,GAAGC,MAAM,CAACC,aAAa;EAC9BL,iBAAiB,GAAGG,GAAG,CAACH,iBAAiB,IAAIG,GAAG,CAACF,oBAAoB,IAAIE,GAAG,CAACD,uBAAuB;AACtG;AACA,IAAII,EAAE,GAAG,IAAIN,iBAAiB,CAAC;IAACO,UAAU,EAAC;EAAE,CAAC,CAAC;EAAEC,IAAI,GAAG,SAAAA,CAAA,EAAU,CAAC,CAAC;AACpEF,EAAE,CAACG,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1BH,EAAE,CAACI,WAAW,CAACJ,EAAE,CAACK,mBAAmB,CAACC,IAAI,CAACN,EAAE,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC;AACvDF,EAAE,CAACO,cAAc,GAAG,UAASC,GAAG,EAAC;EAC7B,IAAIA,GAAG,IAAIA,GAAG,CAACC,SAAS,IAAID,GAAG,CAACC,SAAS,CAACA,SAAS,EAAC;IAClD,IAAG;MACDjB,EAAE,GAAG,gEAAgE,CAACkB,IAAI,CAACF,GAAG,CAACC,SAAS,CAACA,SAAS,CAAC,CAAC,CAAC,CAAC;MACtGE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEpB,EAAE,CAAC;MAC1BQ,EAAE,CAACO,cAAc,GAAGL,IAAI;IAE1B,CAAC,CACD,OAAMW,GAAG,EAAC;MACR,IAAG;QACDF,OAAO,CAACC,GAAG,CAAC,eAAe,EAACC,GAAG,CAAC;QAChC,IAAG,CAACrB,EAAE,EAAEA,EAAE,GAAC,gEAAgE,CAACkB,IAAI,CAACjB,MAAM,CAACqB,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAE3G,CAAC,CACD,OAAMC,IAAI,EAAE;QACVxB,EAAE,GAAC,WAAW;MAChB;IACF;EACD;AACL,CAAC;AACD,eAAeA,EAAE;AACjB;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}